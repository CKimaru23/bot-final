{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Development/code/phase-2/bot-redone/src/components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BotCard from './BotCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotCollection = () => {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:3000/bots').then(response => response.json()).then(data => setBots(data));\n  }, []);\n  const handleSelectBot = bot => {\n    setSelectedBot(bot);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedBot ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-collection\",\n      children: bots.map(bot => /*#__PURE__*/_jsxDEV(BotCard, {\n        bot: bot,\n        handleSelectBot: handleSelectBot\n      }, bot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(BotCollection, \"mIKXZsE2JCkJe0h2pXd+w1ZONvg=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useState","useEffect","BotCard","BotCollection","bots","setBots","selectedBot","setSelectedBot","fetch","then","response","json","data","handleSelectBot","bot","map","id"],"sources":["/home/moringa/Development/code/phase-2/bot-redone/src/components/BotCollection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BotCard from './BotCard';\n\n\nconst BotCollection = () => {\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n\n  useEffect(() => {\n    fetch('http://localhost:3000/bots')\n      .then(response => response.json())\n      .then(data => setBots(data));\n  }, []);\n\n  const handleSelectBot = bot => {\n    setSelectedBot(bot);\n  };\n\n  return (\n    <div>\n      {selectedBot ? (\n        <BotSpecs bot={selectedBot} />\n      ) : (\n        <div className=\"bot-collection\">\n          {bots.map(bot => (\n            <BotCard key={bot.id} bot={bot} handleSelectBot={handleSelectBot} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BotCollection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAAC;AAGhC,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,OAAO,CAACO,IAAI,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAGC,GAAG,IAAI;IAC7BP,cAAc,CAACO,GAAG,CAAC;EACrB,CAAC;EAED,oBACE;IAAA,UACGR,WAAW,gBACV,QAAC,QAAQ;MAAC,GAAG,EAAEA;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG,gBAE9B;MAAK,SAAS,EAAC,gBAAgB;MAAA,UAC5BF,IAAI,CAACW,GAAG,CAACD,GAAG,iBACX,QAAC,OAAO;QAAc,GAAG,EAAEA,GAAI;QAAC,eAAe,EAAED;MAAgB,GAAnDC,GAAG,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QACrB;IAAC;MAAA;MAAA;MAAA;IAAA;EAEL;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GA3BIb,aAAa;AAAA,KAAbA,aAAa;AA6BnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}