{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Development/code/phase-2/bot-redone/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport BotSpecs from \"./BotSpecs\";\nimport BotCollection from \"./BotCollection\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport FilterBar from \"./FilterBar\";\nimport SortBar from \"./SortBar\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [selectedBots, setSelectedBots] = useState([]);\n  const [filteredBots, setFilteredBots] = useState([]);\n  const [sortConfig, setSortConfig] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/bots\").then(res => res.json()).then(data => setBots(data));\n  }, []);\n  useEffect(() => {\n    setFilteredBots(bots.filter(bot => {\n      return bot.health;\n    }));\n  }, [bots, sortConfig]);\n  const handleAddBot = bot => {\n    if (!selectedBots.find(b => b.id === bot.id)) {\n      setSelectedBots([...selectedBots, bot]);\n    }\n  };\n  const handleReleaseBot = id => {\n    setSelectedBots(selectedBots.filter(bot => bot.id !== id));\n  };\n  const handleDischargeBot = () => {\n    setSelectedBots([]);\n  };\n\n  // const handleSort = (key) => {\n  //   let direction = sortConfig.direction;\n  //   if (sortConfig.key === key) {\n  //     direction = sortConfig.direction * -1;\n  //   }\n  //   setSortConfig({ key, direction });\n  // };\n\n  const handleSort = property => {\n    setBots([...bots].sort((a, b) => a[property] > b[property] ? 1 : -1));\n  };\n\n  // const handleFilter = (min, max) => {\n  //   setSortConfig({ ...sortConfig, healthRange: [min, max] });\n  // };\n\n  const handleFilter = value => {\n    setBots(bots.filter(bot => bot.bot_class === value));\n    bots = setBots;\n  };\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  function deleteBot() {\n    const url = `http://localhost:3000/bots/${id}`;\n    const answer = window.confirm('Are you sure you want to delete this bot ?');\n    if (answer === true) {\n      fetch(url, {\n        method: 'DELETE'\n      }).then(res => res.json()).then(() => {\n        const deletedBot = bots.filter(b => b.id !== id);\n        setBots(deletedBot);\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Bot Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortBar, {\n      onSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: refreshPage,\n      children: [\"Click here to \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Refilter and Resort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: filteredBots,\n      onAddBot: handleAddBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: selectedBots,\n      onRelease: handleReleaseBot,\n      onDischarge: handleDischargeBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"y1tB+WFBBhmGKGelVAx5Df2iBkE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BotSpecs","BotCollection","YourBotArmy","FilterBar","SortBar","App","bots","setBots","selectedBots","setSelectedBots","filteredBots","setFilteredBots","sortConfig","setSortConfig","fetch","then","res","json","data","filter","bot","health","handleAddBot","find","b","id","handleReleaseBot","handleDischargeBot","handleSort","property","sort","a","handleFilter","value","bot_class","refreshPage","window","location","reload","deleteBot","url","answer","confirm","method","deletedBot"],"sources":["/home/moringa/Development/code/phase-2/bot-redone/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BotSpecs from \"./BotSpecs\";\nimport BotCollection from \"./BotCollection\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport FilterBar from \"./FilterBar\";\nimport SortBar from \"./SortBar\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [bots, setBots] = useState([]);\n  const [selectedBots, setSelectedBots] = useState([]);\n  const [filteredBots, setFilteredBots] = useState([]);\n  const [sortConfig, setSortConfig] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/bots\")\n      .then((res) => res.json())\n      .then((data) => setBots(data));\n  }, []);\n\n  useEffect(() => {\n    setFilteredBots(\n      bots.filter((bot) => {\n        return bot.health;\n      })\n    );\n  }, [bots, sortConfig]);\n\n  const handleAddBot = (bot) => {\n    if (!selectedBots.find((b) => b.id === bot.id)) {\n      setSelectedBots([...selectedBots, bot]);\n    }\n  };\n\n  const handleReleaseBot = (id) => {\n    setSelectedBots(selectedBots.filter((bot) => bot.id !== id));\n  };\n\n  const handleDischargeBot = () => {\n    setSelectedBots([]);\n  };\n\n  // const handleSort = (key) => {\n  //   let direction = sortConfig.direction;\n  //   if (sortConfig.key === key) {\n  //     direction = sortConfig.direction * -1;\n  //   }\n  //   setSortConfig({ key, direction });\n  // };\n\n  const handleSort = (property) => {\n    setBots([...bots].sort((a, b) => (a[property] > b[property] ? 1 : -1)));\n  };\n\n  // const handleFilter = (min, max) => {\n  //   setSortConfig({ ...sortConfig, healthRange: [min, max] });\n  // };\n\n  const handleFilter = (value) => {\n    setBots(bots.filter((bot) => bot.bot_class === value));\n    bots=setBots\n  };\n\n  function refreshPage() {\n    window.location.reload(false);\n    }\n  \n    function deleteBot(){\n      const url = `http://localhost:3000/bots/${id}`\n      const answer = window.confirm('Are you sure you want to delete this bot ?')\n      if(answer === true){\n          fetch(url,{\n              method: 'DELETE'\n          })\n          .then(res => res.json())\n          .then(() => {\n              const deletedBot  = bots.filter((b)=>b.id !== id)\n              setBots(deletedBot);\n          })\n      }\n    }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"header\">Bot Management System</h1>\n      <FilterBar onFilter={handleFilter} />\n      <SortBar onSort={handleSort} />\n      <button onClick={refreshPage}>Click here to <b>Refilter and Resort</b></button>\n      <BotCollection bots={filteredBots} onAddBot={handleAddBot} />\n      {/* <BotSpecs selectedBots={selectedBots} /> */}\n      <YourBotArmy bots={selectedBots} onRelease={handleReleaseBot} onDischarge={handleDischargeBot} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}