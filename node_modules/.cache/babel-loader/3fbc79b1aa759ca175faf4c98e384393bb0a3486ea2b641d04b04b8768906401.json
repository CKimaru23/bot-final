{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Development/code/phase-2/bot-redone/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport FilterBar from './FilterBar';\nimport SortBar from './SortBar';\nimport BotSpecs from './BotSpecs';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [selectedBots, setSelectedBots] = useState([]);\n  const [filteredBots, setFilteredBots] = useState([]);\n  const [sort, setSort] = useState({});\n  useEffect(() => {\n    fetch('http://localhost:3000/bots').then(res => res.json()).then(data => setBots(data));\n  }, []);\n  useEffect(() => {\n    setFilteredBots(bots.filter(bot => {\n      const botClass = bot.bot_class;\n      return Object.keys(sort).some(key => sort[key].includes(botClass));\n    }));\n  }, [sort, bots]);\n  const handleSort = type => {\n    setSort({\n      ...sort,\n      [type]: sort[type] ? sort[type].length === botClasses.length ? [] : botClasses : botClasses\n    });\n  };\n  const handleAddBot = bot => {\n    if (selectedBots.some(b => b.bot_class === bot.bot_class)) return;\n    setSelectedBots([...selectedBots, bot]);\n  };\n  const handleRemoveBot = bot => {\n    setSelectedBots(selectedBots.filter(b => b !== bot));\n  };\n  const handleFilter = (className, isChecked) => {\n    setSort({\n      ...sort,\n      [className]: isChecked ? [...sort[className], className] : sort[className].filter(c => c !== className)\n    });\n  };\n  const handleSelectBot = bot => {\n    setSelectedBot(bot);\n  };\n  const handleBack = () => {\n    setSelectedBot(null);\n  };\n  const botClasses = ['Support', 'Medic', 'Assault', 'Defender', 'Captain', 'Witch'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Bots Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), selectedBot ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      onBack: handleBack,\n      onEnlist: () => handleAddBot(selectedBot)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(BotCollection, {\n        bots: filteredBots,\n        onSelect: handleSelectBot,\n        onAddBot: handleAddBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: selectedBots,\n      onRelease: handleRemoveBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XR2H1Oscs4hPNhpFTNrEhQR7PTA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","YourBotArmy","FilterBar","SortBar","BotSpecs","App","bots","setBots","selectedBot","setSelectedBot","selectedBots","setSelectedBots","filteredBots","setFilteredBots","sort","setSort","fetch","then","res","json","data","filter","bot","botClass","bot_class","Object","keys","some","key","includes","handleSort","type","length","botClasses","handleAddBot","b","handleRemoveBot","handleFilter","className","isChecked","c","handleSelectBot","handleBack"],"sources":["/home/moringa/Development/code/phase-2/bot-redone/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport FilterBar from './FilterBar';\nimport SortBar from './SortBar';\nimport BotSpecs from './BotSpecs';\nimport './App.css'\n\nconst App = () => {\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [selectedBots, setSelectedBots] = useState([]);\n  const [filteredBots, setFilteredBots] = useState([]);\n  const [sort, setSort] = useState({});\n\n  useEffect(() => {\n    fetch('http://localhost:3000/bots')\n      .then(res => res.json())\n      .then(data => setBots(data));\n  }, []);\n\n  useEffect(() => {\n    setFilteredBots(bots.filter(bot => {\n      const botClass = bot.bot_class;\n      return Object.keys(sort).some(key => sort[key].includes(botClass));\n    }));\n  }, [sort, bots]);\n\n  const handleSort = type => {\n    setSort({\n      ...sort,\n      [type]: sort[type]\n        ? sort[type].length === botClasses.length\n          ? []\n          : botClasses\n        : botClasses,\n    });\n  };\n\n  const handleAddBot = bot => {\n    if (selectedBots.some(b => b.bot_class === bot.bot_class)) return;\n    setSelectedBots([...selectedBots, bot]);\n  };\n\n  const handleRemoveBot = bot => {\n    setSelectedBots(selectedBots.filter(b => b !== bot));\n  };\n\n  const handleFilter = (className, isChecked) => {\n    setSort({\n      ...sort,\n      [className]: isChecked ? [...sort[className], className] : sort[className].filter(c => c !== className),\n    });\n  };\n\n  const handleSelectBot = bot => {\n    setSelectedBot(bot);\n  };\n\n  const handleBack = () => {\n    setSelectedBot(null);\n  };\n\n  const botClasses = ['Support', 'Medic', 'Assault', 'Defender', 'Captain', 'Witch'];\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"header\">Bots Collection</h1>\n      {selectedBot ? (\n        <BotSpecs bot={selectedBot} onBack={handleBack} onEnlist={() => handleAddBot(selectedBot)} />\n      ) : (\n        <>\n          {/* <FilterBar onFilter={handleFilter} /> */}\n          {/* <SortBar onSort={handleSort} /> */}\n          <BotCollection bots={filteredBots} onSelect={handleSelectBot} onAddBot={handleAddBot} />\n        </>\n      )}\n      <YourBotArmy bots={selectedBots} onRelease={handleRemoveBot} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,WAAW;AAAA;AAAA;AAElB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACdiB,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIb,OAAO,CAACa,IAAI,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACdc,eAAe,CAACP,IAAI,CAACe,MAAM,CAACC,GAAG,IAAI;MACjC,MAAMC,QAAQ,GAAGD,GAAG,CAACE,SAAS;MAC9B,OAAOC,MAAM,CAACC,IAAI,CAACZ,IAAI,CAAC,CAACa,IAAI,CAACC,GAAG,IAAId,IAAI,CAACc,GAAG,CAAC,CAACC,QAAQ,CAACN,QAAQ,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACT,IAAI,EAAER,IAAI,CAAC,CAAC;EAEhB,MAAMwB,UAAU,GAAGC,IAAI,IAAI;IACzBhB,OAAO,CAAC;MACN,GAAGD,IAAI;MACP,CAACiB,IAAI,GAAGjB,IAAI,CAACiB,IAAI,CAAC,GACdjB,IAAI,CAACiB,IAAI,CAAC,CAACC,MAAM,KAAKC,UAAU,CAACD,MAAM,GACrC,EAAE,GACFC,UAAU,GACZA;IACN,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGZ,GAAG,IAAI;IAC1B,IAAIZ,YAAY,CAACiB,IAAI,CAACQ,CAAC,IAAIA,CAAC,CAACX,SAAS,KAAKF,GAAG,CAACE,SAAS,CAAC,EAAE;IAC3Db,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEY,GAAG,CAAC,CAAC;EACzC,CAAC;EAED,MAAMc,eAAe,GAAGd,GAAG,IAAI;IAC7BX,eAAe,CAACD,YAAY,CAACW,MAAM,CAACc,CAAC,IAAIA,CAAC,KAAKb,GAAG,CAAC,CAAC;EACtD,CAAC;EAED,MAAMe,YAAY,GAAG,CAACC,SAAS,EAAEC,SAAS,KAAK;IAC7CxB,OAAO,CAAC;MACN,GAAGD,IAAI;MACP,CAACwB,SAAS,GAAGC,SAAS,GAAG,CAAC,GAAGzB,IAAI,CAACwB,SAAS,CAAC,EAAEA,SAAS,CAAC,GAAGxB,IAAI,CAACwB,SAAS,CAAC,CAACjB,MAAM,CAACmB,CAAC,IAAIA,CAAC,KAAKF,SAAS;IACxG,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,eAAe,GAAGnB,GAAG,IAAI;IAC7Bb,cAAc,CAACa,GAAG,CAAC;EACrB,CAAC;EAED,MAAMoB,UAAU,GAAG,MAAM;IACvBjC,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMwB,UAAU,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC;EAElF,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAI,SAAS,EAAC,QAAQ;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAK,EAC1CzB,WAAW,gBACV,QAAC,QAAQ;MAAC,GAAG,EAAEA,WAAY;MAAC,MAAM,EAAEkC,UAAW;MAAC,QAAQ,EAAE,MAAMR,YAAY,CAAC1B,WAAW;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,gBAE7F;MAAA,uBAGE,QAAC,aAAa;QAAC,IAAI,EAAEI,YAAa;QAAC,QAAQ,EAAE6B,eAAgB;QAAC,QAAQ,EAAEP;MAAa;QAAA;QAAA;QAAA;MAAA;IAAG,iBAE3F,eACD,QAAC,WAAW;MAAC,IAAI,EAAExB,YAAa;MAAC,SAAS,EAAE0B;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3D;AAEV,CAAC;AAAC,GAxEI/B,GAAG;AAAA,KAAHA,GAAG;AA0ET,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}