{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Development/code/phase-2/bot-redone/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport SortBar from './SortBar';\nimport FilterBar from './FilterBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [yourBots, setYourBots] = useState([]);\n  const [sortBy, setSortBy] = useState(null);\n  const [filterBy, setFilterBy] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/bots').then(res => res.json()).then(data => setBots(data));\n  }, []);\n  const addBotToArmy = bot => {\n    setYourBots([...yourBots, bot]);\n  };\n  const removeBotFromArmy = bot => {\n    setYourBots(yourBots.filter(b => b.id !== bot.id));\n  };\n  const handleSort = sortBy => {\n    setSortBy(sortBy);\n  };\n  const handleFilter = filterBy => {\n    setFilterBy(filterBy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SortBar, {\n      onSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      onAddBot: addBotToArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: yourBots,\n      onRemoveBot: removeBotFromArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HAz6Rw+aE0Mm72KS9a9YpIm5Yj8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","YourBotArmy","SortBar","FilterBar","App","bots","setBots","yourBots","setYourBots","sortBy","setSortBy","filterBy","setFilterBy","fetch","then","res","json","data","addBotToArmy","bot","removeBotFromArmy","filter","b","id","handleSort","handleFilter"],"sources":["/home/moringa/Development/code/phase-2/bot-redone/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport SortBar from './SortBar';\nimport FilterBar from './FilterBar';\n\nconst App = () => {\n  const [bots, setBots] = useState([]);\n  const [yourBots, setYourBots] = useState([]);\n  const [sortBy, setSortBy] = useState(null);\n  const [filterBy, setFilterBy] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:3000/bots')\n      .then((res) => res.json())\n      .then((data) => setBots(data))\n  }, []);\n\n  const addBotToArmy = (bot) => {\n    setYourBots([...yourBots, bot]);\n  };\n\n  const removeBotFromArmy = (bot) => {\n    setYourBots(yourBots.filter((b) => b.id !== bot.id));\n  };\n\n  const handleSort = (sortBy) => {\n    setSortBy(sortBy);\n  };\n\n  const handleFilter = (filterBy) => {\n    setFilterBy(filterBy);\n  };\n\n  return (\n    <div className=\"App\">\n      <SortBar onSort={handleSort} />\n      <FilterBar onFilter={handleFilter} />\n      <BotCollection bots={bots} onAddBot={addBotToArmy} />\n      <YourBotArmy bots={yourBots} onRemoveBot={removeBotFromArmy} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,aAAa;AAAC;AAEpC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKX,OAAO,CAACW,IAAI,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,GAAG,IAAK;IAC5BX,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEY,GAAG,CAAC,CAAC;EACjC,CAAC;EAED,MAAMC,iBAAiB,GAAID,GAAG,IAAK;IACjCX,WAAW,CAACD,QAAQ,CAACc,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,GAAG,CAACI,EAAE,CAAC,CAAC;EACtD,CAAC;EAED,MAAMC,UAAU,GAAIf,MAAM,IAAK;IAC7BC,SAAS,CAACD,MAAM,CAAC;EACnB,CAAC;EAED,MAAMgB,YAAY,GAAId,QAAQ,IAAK;IACjCC,WAAW,CAACD,QAAQ,CAAC;EACvB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,OAAO;MAAC,MAAM,EAAEa;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eAC/B,QAAC,SAAS;MAAC,QAAQ,EAAEC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eACrC,QAAC,aAAa;MAAC,IAAI,EAAEpB,IAAK;MAAC,QAAQ,EAAEa;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eACrD,QAAC,WAAW;MAAC,IAAI,EAAEX,QAAS;MAAC,WAAW,EAAEa;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3D;AAEV,CAAC;AAAC,GApCIhB,GAAG;AAAA,KAAHA,GAAG;AAsCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}