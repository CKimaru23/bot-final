{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Development/code/phase-2/bot-redone/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport BotCollection from \"./BotCollection\";\nimport SortBar from \"./SortBar\";\nimport FilterBar from \"./FilterBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [selectedBots, setSelectedBots] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/bots\").then(res => res.json()).then(data => setBots(data)).catch(err => console.error(err));\n  }, []);\n  const handleAddBot = bot => {\n    setSelectedBots([...selectedBots, bot]);\n  };\n  const handleReleaseBot = id => {\n    setSelectedBots(selectedBots.filter(bot => bot.id !== id));\n  };\n  const handleDischargeBot = id => {\n    setBots(bots.map(bot => bot.id === id ? {\n      ...bot,\n      in_use: false\n    } : bot));\n    setSelectedBots(selectedBots.filter(bot => bot.id !== id));\n  };\n  const handleFilter = value => {\n    setBots(bots.filter(bot => bot.bot_class === value));\n  };\n  const handleSort = property => {\n    setBots([...bots].sort((a, b) => a[property] > b[property] ? 1 : -1));\n  };\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Your Bot Army\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(FilterBar, {\n        onFilter: handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SortBar, {\n        onSort: handleSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Click here to \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Filter and Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n        bots: bots,\n        onAddBot: handleAddBot,\n        onReleaseBot: handleReleaseBot,\n        onDischargeBot: handleDischargeBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z1buF3vdhoDmNE89TXy+Z83zVzQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","SortBar","FilterBar","App","bots","setBots","selectedBots","setSelectedBots","fetch","then","res","json","data","catch","err","console","error","handleAddBot","bot","handleReleaseBot","id","filter","handleDischargeBot","map","in_use","handleFilter","value","bot_class","handleSort","property","sort","a","b","refreshPage","window","location","reload"],"sources":["/home/moringa/Development/code/phase-2/bot-redone/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport BotCollection from \"./BotCollection\";\nimport SortBar from \"./SortBar\";\nimport FilterBar from \"./FilterBar\";\n\nfunction App() {\n  const [bots, setBots] = useState([]);\n  const [selectedBots, setSelectedBots] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/bots\")\n      .then((res) => res.json())\n      .then((data) => setBots(data))\n      .catch((err) => console.error(err));\n  }, []);\n\n  const handleAddBot = (bot) => {\n    setSelectedBots([...selectedBots, bot]);\n  };\n\n  const handleReleaseBot = (id) => {\n    setSelectedBots(selectedBots.filter((bot) => bot.id !== id));\n  };\n\n  const handleDischargeBot = (id) => {\n    setBots(bots.map((bot) => (bot.id === id ? { ...bot, in_use: false } : bot)));\n    setSelectedBots(selectedBots.filter((bot) => bot.id !== id));\n  };\n\n  const handleFilter = (value) => {\n    setBots(bots.filter((bot) => bot.bot_class === value));\n  };\n\n  const handleSort = (property) => {\n    setBots([...bots].sort((a, b) => (a[property] > b[property] ? 1 : -1)));\n  };\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  \n  return (\n    <div className=\"App\">\n      <h1 className=\"header\">Your Bot Army</h1>\n      <div className=\"content\">\n        <FilterBar onFilter={handleFilter} />\n        <SortBar onSort={handleSort} />\n        <p>Click here to <b>Filter and Sort</b></p>\n        <BotCollection\n          bots={bots}\n          onAddBot={handleAddBot}\n          onReleaseBot={handleReleaseBot}\n          onDischargeBot={handleDischargeBot}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}